name: CD
on: 
  pull_request:
    branches: [ main ]
    types: [ closed ]

jobs:
  ecr_setting:
    # if: contains(github.event.comment.html_url, '/pull/') && contains(github.event.comment.body, '/deploy')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: AWS Mfa login
        uses: floatic-unicorn/floatic-github-actions/aws-mfa-login@v1
        with:
          access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          mfa_key: ${{ secrets.MFA_KEY }}
          mfa_arn: ${{ secrets.MFA_ARN }}
        
      - id: get_ecr_password
        name: Get ECR password
        uses: floatic-unicorn/floatic-github-actions/aws-ecr-password@v1
          
    outputs:
      ecr_password: ${{ steps.get_ecr_password.outputs.ecr_password }}

  build_debian:
    needs: ecr_setting
    runs-on: ubuntu-latest
    container:
      image: 557571393534.dkr.ecr.ap-northeast-2.amazonaws.com/floom:latest
      credentials:
        username: AWS
        password: ${{ needs.ecr_setting.outputs.ecr_password }}
    steps:
      - uses: actions/checkout@v3
        with:
          path: 'iot_ws/iot/'

      - name: Checkout submodules
        run: |
          cd iot_ws/iot
          git submodule update --init --recursive

      - name: Generate debian file
        run: | 
          source /opt/floatic/debian/humble/setup.bash
          rosdep update
          cd iot_ws/iot
          floom-generate rosdebian
          ls ../*.deb
  
      - name: AWS Mfa login
        uses: floatic-unicorn/floatic-github-actions/aws-mfa-login@v1
        with:
          access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          mfa_key: ${{ secrets.MFA_KEY }}
          mfa_arn: ${{ secrets.MFA_ARN }}
      
      - name: Upload to S3
        run: |
          aws s3 cp $(ls iot_ws/*.deb) s3://robotics-workflow-archive/floatic-aws-iot-sdk